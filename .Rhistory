model1 <- svm(y1 ~ ., data = data1, kernel = 'linear', scale = F)
predict1 <- predict(model1, subset(data1, select = -y1))
table(predict1)
coef1 <- model1$coefs
coef1
data1
X1
ind1 <- which(iris[, "Species"] == "setosa" | iris[, 'Species'] == "versicolor")
X1 <- X[ind1, ]
ones <- rep(1, dim(X1)[1])
X1 <- cbind(one, X1)
X1 <- cbind(ones, X1)
y1 <- y[ind1]
data1 <- cbind(X1, y1)
data1
rm(list=ls())
if (!is.loaded('e1071')) library('e1071')
if (!is.loaded('MASS')) library('MASS')
data(iris)
X <- subset(iris, select = -Species)
y <- iris$Species
ind1 <- which(iris[, "Species"] == "setosa" | iris[, 'Species'] == "versicolor")
X1 <- X[ind1, ]
ones <- rep(1, dim(X1)[1])
X1 <- cbind(ones, X1)
y1 <- y[ind1]
data1 <- cbind(X1, y1)
model1 <- svm(y1 ~ ., data = data1, kernel = 'linear', scale = F)
predict1 <- predict(model1, subset(data1, select = -y1))
table(predict1)
coef1 <- model1$coefs
coef1
data1
str(model1)
w <- coef1 %*% model1$SV
coef1
coef1 <- matrix(model1$coefs, nrow = 1)
w <- coef1 %*% model1$SV
w
slidify('index.Rmd')
slidify('index.Rmd')
rm(list=ls())
if (!is.loaded('e1071')) library('e1071')
if (!is.loaded('MASS')) library('MASS')
data(iris)
X <- subset(iris, select = -Species)
y <- iris$Species
ind1 <- which(iris[, "Species"] == "setosa" | iris[, 'Species'] == "versicolor")
X1 <- X[ind1, ]
ones <- rep(1, dim(X1)[1])
X1 <- cbind(ones, X1)
y1 <- y[ind1]
data1 <- cbind(X1, y1)
ind2 <- which(iris[, "Species"] == "setosa" | iris[, 'Species'] == "virginica")
X2 <- X[ind2, ]
y2 <- y[ind2]
data2 <- cbind(X2, y2)
ind3 <- which(iris[, "Species"] == "versicolor" | iris[, 'Species'] == "virginica")
X3 <- X[ind3, ]
y3 <- y[ind3]
data3 <- cbind(X3, y3)
model1 <- svm(y1 ~ ., data = data1, kernel = 'linear', scale = F)
model2 <- svm(y2 ~ ., data = data2, kernel = 'linear')
model3 <- svm(y3 ~ ., data = data3, kernel = 'linear')
plot(model1, data1, Petal.Width ~ Petal.Length,
slice = list(Sepal.Width = 3, Sepal.Length = 4),color.palette = terrain.colors)
plot(model2, data2, Petal.Width ~ Petal.Length,
slice = list(Sepal.Width = 3, Sepal.Length = 4),color.palette = terrain.colors)
plot(model3, data3, Petal.Width ~ Petal.Length,
slice = list(Sepal.Width = 3, Sepal.Length = 4),color.palette = terrain.colors)
predict1 <- predict(model1, subset(data1, select = -y1))
table(predict1)
coef1 <- matrix(model1$coefs, nrow = 1)
w1 <- coef1 %*% model1$SV
predict2 <- predict(model2, subset(data2, select = -y2))
table(predict2)
coef2 <- matrix(model2$coefs, nrow = 1)
w2 <- coef2 %*% model2$SV
predict3 <- predict(model3, subset(data3, select = -y3))
table(predict3)
coef3 <- matrix(model3$coefs, nrow = 1)
w3 <- coef3 %*% model3$SV
rm(list=ls())
if (!is.loaded('e1071')) library('e1071')
if (!is.loaded('MASS')) library('MASS')
data(iris)
X <- subset(iris, select = -Species)
y <- iris$Species
ind1 <- which(iris[, "Species"] == "setosa" | iris[, 'Species'] == "versicolor")
X1 <- X[ind1, ]
ones <- rep(1, dim(X1)[1])
X1 <- cbind(ones, X1)
y1 <- y[ind1]
data1 <- cbind(X1, y1)
ind2 <- which(iris[, "Species"] == "setosa" | iris[, 'Species'] == "virginica")
ones <- rep(1, dim(X2)[1])
X2 <- cbind(ones, X2)
y2 <- y[ind2]
data2 <- cbind(X2, y2)
ind3 <- which(iris[, "Species"] == "versicolor" | iris[, 'Species'] == "virginica")
ones <- rep(1, dim(X3)[1])
X3 <- cbind(ones, X3)
y3 <- y[ind3]
data3 <- cbind(X3, y3)
model1 <- svm(y1 ~ ., data = data1, kernel = 'linear', scale = F)
model2 <- svm(y2 ~ ., data = data2, kernel = 'linear')
model3 <- svm(y3 ~ ., data = data3, kernel = 'linear')
plot(model1, data1, Petal.Width ~ Petal.Length,
slice = list(Sepal.Width = 3, Sepal.Length = 4),color.palette = terrain.colors)
plot(model2, data2, Petal.Width ~ Petal.Length,
slice = list(Sepal.Width = 3, Sepal.Length = 4),color.palette = terrain.colors)
plot(model3, data3, Petal.Width ~ Petal.Length,
slice = list(Sepal.Width = 3, Sepal.Length = 4),color.palette = terrain.colors)
predict1 <- predict(model1, subset(data1, select = -y1))
table(predict1)
coef1 <- matrix(model1$coefs, nrow = 1)
w1 <- coef1 %*% model1$SV
predict2 <- predict(model2, subset(data2, select = -y2))
table(predict2)
coef2 <- matrix(model2$coefs, nrow = 1)
w2 <- coef2 %*% model2$SV
predict3 <- predict(model3, subset(data3, select = -y3))
table(predict3)
coef3 <- matrix(model3$coefs, nrow = 1)
w3 <- coef3 %*% model3$SV
rm(list=ls())
if (!is.loaded('e1071')) library('e1071')
if (!is.loaded('MASS')) library('MASS')
data(iris)
X <- subset(iris, select = -Species)
y <- iris$Species
ind1 <- which(iris[, "Species"] == "setosa" | iris[, 'Species'] == "versicolor")
X1 <- X[ind1, ]
ones <- rep(1, dim(X1)[1])
X1 <- cbind(ones, X1)
y1 <- y[ind1]
data1 <- cbind(X1, y1)
ind2 <- which(iris[, "Species"] == "setosa" | iris[, 'Species'] == "virginica")
X2 <- X[ind2, ]
ones <- rep(1, dim(X2)[1])
X2 <- cbind(ones, X2)
y2 <- y[ind2]
data2 <- cbind(X2, y2)
ind3 <- which(iris[, "Species"] == "versicolor" | iris[, 'Species'] == "virginica")
X3 <- X[ind3, ]
ones <- rep(1, dim(X3)[1])
X3 <- cbind(ones, X3)
y3 <- y[ind3]
data3 <- cbind(X3, y3)
model1 <- svm(y1 ~ ., data = data1, kernel = 'linear', scale = F)
model2 <- svm(y2 ~ ., data = data2, kernel = 'linear')
model3 <- svm(y3 ~ ., data = data3, kernel = 'linear')
plot(model1, data1, Petal.Width ~ Petal.Length,
slice = list(Sepal.Width = 3, Sepal.Length = 4),color.palette = terrain.colors)
plot(model2, data2, Petal.Width ~ Petal.Length,
slice = list(Sepal.Width = 3, Sepal.Length = 4),color.palette = terrain.colors)
plot(model3, data3, Petal.Width ~ Petal.Length,
slice = list(Sepal.Width = 3, Sepal.Length = 4),color.palette = terrain.colors)
predict1 <- predict(model1, subset(data1, select = -y1))
table(predict1)
coef1 <- matrix(model1$coefs, nrow = 1)
w1 <- coef1 %*% model1$SV
predict2 <- predict(model2, subset(data2, select = -y2))
table(predict2)
coef2 <- matrix(model2$coefs, nrow = 1)
w2 <- coef2 %*% model2$SV
predict3 <- predict(model3, subset(data3, select = -y3))
table(predict3)
coef3 <- matrix(model3$coefs, nrow = 1)
w3 <- coef3 %*% model3$SV
rm(list=ls())
if (!is.loaded('e1071')) library('e1071')
if (!is.loaded('MASS')) library('MASS')
data(iris)
X <- subset(iris, select = -Species)
y <- iris$Species
ind1 <- which(iris[, "Species"] == "setosa" | iris[, 'Species'] == "versicolor")
X1 <- X[ind1, ]
ones <- rep(1, dim(X1)[1])
X1 <- cbind(ones, X1)
y1 <- y[ind1]
data1 <- cbind(X1, y1)
ind2 <- which(iris[, "Species"] == "setosa" | iris[, 'Species'] == "virginica")
X2 <- X[ind2, ]
ones <- rep(1, dim(X2)[1])
X2 <- cbind(ones, X2)
y2 <- y[ind2]
data2 <- cbind(X2, y2)
ind3 <- which(iris[, "Species"] == "versicolor" | iris[, 'Species'] == "virginica")
X3 <- X[ind3, ]
ones <- rep(1, dim(X3)[1])
X3 <- cbind(ones, X3)
y3 <- y[ind3]
data3 <- cbind(X3, y3)
model1 <- svm(y1 ~ ., data = data1, kernel = 'linear', scale = F)
model2 <- svm(y2 ~ ., data = data2, kernel = 'linear', scale = F)
model3 <- svm(y3 ~ ., data = data3, kernel = 'linear', scale = F)
plot(model1, data1, Petal.Width ~ Petal.Length,
slice = list(Sepal.Width = 3, Sepal.Length = 4),color.palette = terrain.colors)
plot(model2, data2, Petal.Width ~ Petal.Length,
slice = list(Sepal.Width = 3, Sepal.Length = 4),color.palette = terrain.colors)
plot(model3, data3, Petal.Width ~ Petal.Length,
slice = list(Sepal.Width = 3, Sepal.Length = 4),color.palette = terrain.colors)
predict1 <- predict(model1, subset(data1, select = -y1))
table(predict1)
coef1 <- matrix(model1$coefs, nrow = 1)
w1 <- coef1 %*% model1$SV
predict2 <- predict(model2, subset(data2, select = -y2))
table(predict2)
coef2 <- matrix(model2$coefs, nrow = 1)
w2 <- coef2 %*% model2$SV
predict3 <- predict(model3, subset(data3, select = -y3))
table(predict3)
coef3 <- matrix(model3$coefs, nrow = 1)
w3 <- coef3 %*% model3$SV
w1
w2
w3
w1
w1 <- matrix(w1, ncol = 1)
test <- X1 %*% w1
X1_test <- as.matrix(X1)
test <- X1_test %*% w1
test
y1
model1$SV
model1$SV
model3$SV
model2$SV
data(iris)
X <- subset(iris, select = -Species)
y <- iris$Species
ind1 <- which(iris[, "Species"] == "setosa" | iris[, 'Species'] == "versicolor")
X1 <- X[ind1, ]
y1 <- y[ind1]
data1 <- cbind(X1, y1)
model1 <- svm(y1 ~ ., data = data1, kernel = 'linear', scale = F)
coef1 <- matrix(model1$coefs, nrow = 1)
w1 <- coef1 %*% model1$SV
model1$SV
model1 <- svm(y1 ~ ., data = data1, kernel = 'linear', scale = T)
model1$SV
model1 <- svm(y1 ~ ., data = data1, kernel = 'linear', scale = F)
model1$SV
rm(list=ls())
if (!is.loaded('e1071')) library('e1071')
if (!is.loaded('MASS')) library('MASS')
data(iris)
X <- subset(iris, select = -Species)
y <- iris$Species
ind1 <- which(iris[, "Species"] == "setosa" | iris[, 'Species'] == "versicolor")
X1 <- X[ind1, ]
y1 <- y[ind1]
data1 <- cbind(X1, y1)
model1 <- svm(y1 ~ ., data = data1, kernel = 'linear', scale = F)
predict1 <- predict(model1, subset(data1, select = -y1))
table(predict1)
coef1 <- matrix(model1$coefs, nrow = 1)
w1 <- coef1 %*% model1$SV
predict1
as.numeric(y1)
y1 <- as.numeric(y1)
attributes(y1) <- list(levels = c('setosa', 'versicolor'), class = 'factor')
attributes(y1) <- list(levels = c('setosa', 'versicolor'))
attributs(y2)
attributes(y2)
y2 <- y[ind2]
ind2 <- which(iris[, "Species"] == "setosa" | iris[, 'Species'] == "virginica")
y2 <- y[ind2]
attributes(y2)
attributes(y1)
y1
attributes(y1) <- list(class = "factor", levels = c("setosa", "versicolor"))
y1
class(y1)
class(y1) <- "factor"
attributes(y1)[["class"]] <- "factor"
rm(list=ls())
if (!is.loaded('e1071')) library('e1071')
if (!is.loaded('MASS')) library('MASS')
data(iris)
X <- subset(iris, select = -Species)
y <- iris$Species
ind1 <- which(iris[, "Species"] == "setosa" | iris[, 'Species'] == "versicolor")
X1 <- X[ind1, ]
ones <- rep(1, dim(X1)[1])
X1 <- cbind(ones, X1)
y1 <- y[ind1]
y1 <- as.factor(y1, levels = c("setosa", 'versicolor'))
y1 <- factor(y1, levels = c("setosa", 'versicolor'))
y1
rm(list=ls())
if (!is.loaded('e1071')) library('e1071')
if (!is.loaded('MASS')) library('MASS')
data(iris)
X <- subset(iris, select = -Species)
y <- iris$Species
ind1 <- which(iris[, "Species"] == "setosa" | iris[, 'Species'] == "versicolor")
X1 <- X[ind1, ]
ones <- rep(1, dim(X1)[1])
X1 <- cbind(ones, X1)
y1 <- y[ind1]
y1 <- factor(y1, levels = c("setosa", 'versicolor'))
data1 <- cbind(X1, y1)
model1 <- svm(y1 ~ ., data = data1, kernel = 'linear', scale = F)
plot(model1, data1, Petal.Width ~ Petal.Length,
slice = list(Sepal.Width = 3, Sepal.Length = 4),color.palette = terrain.colors)
predict1 <- predict(model1, subset(data1, select = -y1))
table(predict1)
coef1 <- matrix(model1$coefs, nrow = 1)
w1 <- coef1 %*% model1$SV
w1
y1
w1 <- matrix(w1, ncol = 1)
test_X1 <- as.matrix(X1)
test <- test_X1 %*% w1
test
test <- test_X1 %*% coef1
test <- test_X1 %*% t(coef1)
model1
str(model1)
ind1 <- which(iris[, "Species"] == "setosa" | iris[, 'Species'] == "versicolor")
X1 <- X[ind1, ]
y1 <- y[ind1]
y1 <- factor(y1, levels = c("setosa", 'versicolor'))
data1 <- cbind(X1, y1)
model1 <- svm(y1 ~ ., data = data1, kernel = 'linear', scale = F)
str(model1)
?attr
?predict
predict
model1
y <- as.numeric(y1)
y
y <- (as.numeric(y1) - 1.5)/0.5
y
y <- y[model1$index]
y
w1 <- y *coef1 %*% model1$SV
coef1
y * coef1
w1 <- (y *coef1)%*% model1$SV
w
w1
rm(list=ls())
if (!is.loaded('e1071')) library('e1071')
if (!is.loaded('MASS')) library('MASS')
data(iris)
X <- subset(iris, select = -Species)
y <- iris$Species
ind1 <- which(iris[, "Species"] == "setosa" | iris[, 'Species'] == "versicolor")
X1 <- X[ind1, ]
ones <- rep(1, dim(X1)[1])
X1 <- cbind(ones, X1)
y1 <- y[ind1]
y1 <- factor(y1, levels = c("setosa", 'versicolor'))
data1 <- cbind(X1, y1)
model1 <- svm(y1 ~ ., data = data1, kernel = 'linear', scale = F)
table(predict1)
coef1 <- matrix(model1$coefs, nrow = 1)
y <- as.numeric(y1) - 1.5)/0.5
y <- (as.numeric(y1) - 1.5)/0.5
y <- y[model1$index]
w1 <- (y *coef1)%*% model1$SV
w1
test_X1 <- as.matrix(X1)
test <- test_X1 %*% w1
test <- test_X1 %*% t(w1)
test
model1$SV
X1[model1$index,]
y
y <- -(as.numeric(y1) - 1.5)/0.5
y <- y[model1$index]
w1 <- (y *coef1)%*% model1$SV
test <- test_X1 %*% w1
test <- test_X1 %*% t(w1)
test
class(model1)
svm.predict
?svm.predict
?svm.formula.predict
rm(list=ls())
if (!is.loaded('e1071')) library('e1071')
if (!is.loaded('MASS')) library('MASS')
data(iris)
X <- subset(iris, select = -Species)
y <- iris$Species
ind1 <- which(iris[, "Species"] == "setosa" | iris[, 'Species'] == "versicolor")
X1 <- X[ind1, ]
ones <- rep(1, dim(X1)[1])
X1 <- cbind(ones, X1)
y1 <- y[ind1]
y1 <- factor(y1, levels = c("setosa", 'versicolor'))
data1 <- cbind(X1, y1)
model1 <- svm(y1 ~ ., data = data1, kernel = 'linear', scale = F)
coef1 <- matrix(model1$coefs, nrow = 1)
y <- -(as.numeric(y1) - 1.5)/0.5
y
y <- y[model1$index]
y
coef1
y * coef1
w1 <- coef1 %*% model1$SV
w1
w1 <- t(w1)
w1
test_X1 <- matrix(X1)
test_X1 <-
test_X1
test_X1 <- as.matrix(X1)
test_X1
test <- test_X1 %*% w1
test
model1$index
w1
t(w1)
rm(list=ls())
if (!is.loaded('e1071')) library('e1071')
if (!is.loaded('MASS')) library('MASS')
data(iris)
X <- subset(iris, select = -Species)
y <- iris$Species
ind1 <- which(iris[, "Species"] == "setosa" | iris[, 'Species'] == "versicolor")
X1 <- X[ind1, ]
y1 <- y[ind1]
y1 <- factor(y1, levels = c("setosa", 'versicolor'))
data1 <- cbind(X1, y1)
model1 <- svm(y1 ~ ., data = data1, kernel = 'linear', scale = F)
coef1 <- matrix(model1$coefs, nrow = 1)
w1 <- coef1 %*% model1$SV
w1
class(w1)
w1 <- t(coef1 %*% model1$SV)
test <- (as.matrix(X1) %*% w1)[model$index]
test <- (as.matrix(X1) %*% w1)[model1$index]
test
test[1] - test[3]
slidify('index.Rmd')
publish(username = 'dboyliao', repo = 'MLDM_RBasic')
plot(model1, data1, Petal.Width ~ Petal.Length,
slice = list(Sepal.Width = 3, Sepal.Length = 4),color.palette = terrain.colors)
rm(list=ls())
if (!is.loaded('e1071')) library('e1071')
if (!is.loaded('MASS')) library('MASS')
data(iris)
X <- subset(iris, select = -Species)
y <- iris$Species
ind1 <- which(iris[, "Species"] == "setosa" | iris[, 'Species'] == "versicolor")
X1 <- X[ind1, ]
ones <- rep(1, dim(X1)[1])
X1 <- cbind(ones, X1)
y1 <- y[ind1]
y1 <- factor(y1, levels = c("setosa", 'versicolor'))
data1 <- cbind(X1, y1)
ind2 <- which(iris[, "Species"] == "setosa" | iris[, 'Species'] == "virginica")
X2 <- X[ind2, ]
ones <- rep(1, dim(X2)[1])
X2 <- cbind(ones, X2)
y2 <- y[ind2]
data2 <- cbind(X2, y2)
ind3 <- which(iris[, "Species"] == "versicolor" | iris[, 'Species'] == "virginica")
X3 <- X[ind3, ]
ones <- rep(1, dim(X3)[1])
X3 <- cbind(ones, X3)
y3 <- y[ind3]
data3 <- cbind(X3, y3)
model1 <- svm(y1 ~ ., data = data1, kernel = 'linear', scale = F)
model2 <- svm(y2 ~ ., data = data2, kernel = 'linear', scale = F)
model3 <- svm(y3 ~ ., data = data3, kernel = 'linear', scale = F)
plot(model1, data1, Petal.Width ~ Petal.Length,
slice = list(Sepal.Width = 3, Sepal.Length = 4),color.palette = terrain.colors)
plot(model2, data2, Petal.Width ~ Petal.Length,
slice = list(Sepal.Width = 3, Sepal.Length = 4),color.palette = terrain.colors)
plot(model3, data3, Petal.Width ~ Petal.Length,
slice = list(Sepal.Width = 3, Sepal.Length = 4),color.palette = terrain.colors)
predict1 <- predict(model1, subset(data1, select = -y1))
table(predict1)
coef1 <- matrix(model1$coefs, nrow = 1)
w1 <- t(coef1 %*% model1$SV)
test <- (as.matrix(X1) %*% w1)[model1$index]
predict2 <- predict(model2, subset(data2, select = -y2))
table(predict2)
coef2 <- matrix(model2$coefs, nrow = 1)
w2 <- t(coef2 %*% model2$SV)
predict3 <- predict(model3, subset(data3, select = -y3))
table(predict3)
coef3 <- matrix(model3$coefs, nrow = 1)
w3 <- t(coef3 %*% model3$SV)
ind2 <- which(iris[, "Species"] == "setosa" | iris[, 'Species'] == "virginica")
X2 <- X[ind2, ]
y2 <- y[ind2]
data2 <- cbind(X2, y2)
model3 <- svm(y3 ~ ., data = data3, kernel = 'linear', scale = F)
predict3 <- predict(model3, subset(data3, select = -y3))
table(predict3)
coef3 <- matrix(model3$coefs, nrow = 1)
w3 <- t(coef3 %*% model3$SV)
w3
model1
str(model1)
model1$SV
y1[c(24, 42, 99)]
test_X1 <- as.matrix(X1)
test <- test_X1 %*% w1
test[c(24,42,99)]
test[c(24,42,99)][1] - test[c(24,42,99)][3]
sum(w1^2)
w1
w1^2
sum(w1^2)
(test[c(24,42,99)][1] - test[c(24,42,99)][3])/1.495286
